# This is a basic workflow to help you get started with Actions

name: Deploy to AWS

env: 
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: s3-individueel
  ECS_TASK_DEFINITION: s3-individueel-task
  ECS_CLUSTER_NAME: s3-individueel
  ECS_SERVICE_NAME: s3-individueel-service
  IMAGE_TAG: product-api

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "production" branch
  push:
    branches: [ "production" ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
permissions:
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Build:
    # The type of runner that the job will run on
    name: üîß Build Image
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: üîß Checkout repository
        uses: actions/checkout@v3
        
      - name: ‚òÅ Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: ‚òÅ Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: üîß Build Docker Image
        env: 
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          
      - name: ‚òÅ Push Docker Image to AWS ECR
        env: 
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
  Deploy:
    name: ‚òÅ Deploy Image
    runs-on: ubuntu-latest
    
    steps:
      - name: ‚òÅ Deploy AWS ECS Service
        uses: icalia-actions/deploy-aws-ecs-service@v0.0.7
        with: 
          name: ${ECS_SERVICE_NAME}
          cluster: ${ECS_CLUSTER_NAME}
      
